   _Dbg_old_set_opts=$-
   ((!_Dbg_set_debug)) && set +x
   set +v +u +e

   _Dbg_set_debugger_entry 'create_unsetopt'
   setopt ksharrays shwordsplit norcs
   unsetopt $_Dbg_debugger_unset_opts

   trap '_Dbg_hook_error_handler' ERR

   typeset -i _Dbg_debugged_exit_code=$1
   shift
   typeset -a _Dbg_arg
   _Dbg_arg=($@)

   typeset -i _Dbg_skipping_fn
   ((_Dbg_skipping_fn =
    (_Dbg_return_level >= 0 &&
     ${#funcfiletrace[@]} > _Dbg_return_level) ))

   if [[ -r $_Dbg_journal  ]] ; then
_Dbg_source_journal
   fi
   if ((_Dbg_step_ignore > 0)) ; then
if ((! _Dbg_skipping_fn )) ; then
    ((_Dbg_step_ignore--))
    _Dbg_write_journal "_Dbg_step_ignore=$_Dbg_step_ignore"
fi
   fi

   if ((_Dbg_skip_ignore > 0)) ; then
if ((! _Dbg_skipping_fn )) ; then
    ((_Dbg_skip_ignore--))
    _Dbg_write_journal "_Dbg_skip_ignore=$_Dbg_skip_ignore"
    _Dbg_set_to_return_from_debugger 2
    return 2
fi
   fi

   typeset full_filename
   typeset file_line
   file_line=${funcfiletrace[0]}
   typeset -a split_result; _Dbg_split "$file_line" ':'
   filename=${split_result[0]}
   lineno=${split_result[1]}
   full_filename=$(_Dbg_is_file $filename)
   if [[ -r $full_filename ]] ; then
_Dbg_file2canonic[$filename]="$full_filename"
   fi
   if ((_Dbg_action_count > 0)) ; then
_Dbg_hook_action_hit "$full_filename"
   fi
   if ((_Dbg_brkpt_count > 0)) ; then
if _Dbg_hook_breakpoint_hit "$full_filename"; then
    if ((_Dbg_step_force)) ; then
	typeset _Dbg_frame_previous_file="$_Dbg_frame_last_filename"
	typeset -i _Dbg_frame_previous_lineno="$_Dbg_frame_last_lineno"
    fi
    _Dbg_frame_save_frames 1
    ((_Dbg_brkpt_counts[_Dbg_brkpt_num]++))
    _Dbg_msg "Breakpoint $_Dbg_brkpt_num hit."
    if (( _Dbg_brkpt_onetime[_Dbg_brkpt_num] == 1 )) ; then
	_Dbg_stop_reason='at a breakpoint that has since been deleted'
	_Dbg_delete_brkpt_entry $_Dbg_brkpt_num
    else
	_Dbg_stop_reason="at breakpoint $_Dbg_brkpt_num"
    fi
    _Dbg_hook_enter_debugger "$_Dbg_stop_reason"
    return $?
fi
   fi
   if ((_Dbg_step_ignore == 0 && ! _Dbg_skipping_fn )); then

if ((_Dbg_step_force)) ; then
    typeset _Dbg_frame_previous_file="$_Dbg_frame_last_filename"
    typeset -i _Dbg_frame_previous_lineno="$_Dbg_frame_last_lineno"
    _Dbg_frame_save_frames 1
    if ((_Dbg_frame_previous_lineno == _Dbg_frame_last_lineno)) && \
	[ "$_Dbg_frame_previous_file" = "$_Dbg_frame_last_filename" ] ; then
	_Dbg_set_to_return_from_debugger
	return 0
    fi
else
    _Dbg_frame_save_frames 1
fi

_Dbg_hook_enter_debugger 'after being stepped'
return $?

   fi
   if ((_Dbg_set_linetrace)) ; then
if ((_Dbg_linetrace_delay)) ; then
    sleep $_Dbg_linetrace_delay
fi

_Dbg_frame_save_frames 1
_Dbg_print_location_and_command
   fi
   _Dbg_set_to_return_from_debugger
   return 0
