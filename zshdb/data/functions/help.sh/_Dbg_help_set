  typeset subcmd
  if (( $# == 0 )) ; then
      typeset -a list
      list=(${(ki)_Dbg_command_help_set[@]})
      sort_list 0 ${#list[@]}-1
      for subcmd in ${list[@]}; do
          _Dbg_help_set $subcmd 1
      done
      return 0
  fi

  subcmd="$1"
  typeset label="$2"

  if [[ -n "${_Dbg_command_help_set[$subcmd]}" ]] ; then
      if [[ -z $label ]] ; then
          _Dbg_msg_rst "${_Dbg_command_help_set[$subcmd]}"
          return 0
      else
          label=$(builtin printf "set %-12s-- " $subcmd)
      fi
  fi
  case $subcmd in
      an | ann | anno | annot | annota | annotat | annotate )
          [[ -n $label ]] && label='set annotate  -- '
          _Dbg_msg "${label}annotate style is ${_Dbg_set_annotate}"
          ;;
      ar | arg | args )
          [[ -n $label ]] && label='set args      -- '
          _Dbg_msg \
              "${label}Set argument list to give program when it is restarted."
          ;;
      autoeval  )
          [[ -n $label ]] && label='set autoeval  -- '
          _Dbg_msg \
              "${label}auto evaluation of unrecognized commands is" $(_Dbg_onoff $_Dbg_set_autoeval)
          ;;
      autolist  )
          [[ -n $label ]] && label='set autolist  -- '
   typeset onoff="on."
   [[ -z ${_Dbg_cmdloop_hooks["list"]} ]] && onoff='off.'
          _Dbg_msg \
              "${label}auto listing on debugger stop is ${onoff}"
          ;;
      b | ba | bas | base | basen | basena | basenam | basename )
          [[ -n $label ]] && label='set basename  -- '
          _Dbg_msg \
              "${label}basenames in files is" $(_Dbg_onoff $_Dbg_set_basename)
          ;;
      de|deb|debu|debug )
          [[ -n $label ]] && label='set debug     -- '
          _Dbg_msg \
              "${label}debug the debugger is" $(_Dbg_onoff $_Dbg_set_debug)
          ;;
      di|dif|diff|diffe|differe|differen|different )
          [[ -n $label ]] && label='set different -- '
          _Dbg_msg \
              "${label}stop on different lines is" $(_Dbg_onoff $_Dbg_set_different)
          ;;
      e | ed | edi | edit | editi | editin | editing )
          [[ -n $label ]] && label='set editing   -- '
          _Dbg_msg_nocr "${label}edit mode is "
   if [[ -z $_Dbg_edit ]] ; then
_Dbg_msg 'off.'
   else
_Dbg_msg 'on.'
   fi
          ;;
      high | highl | highlight )
          [[ -n $label ]] && label='set highlight -- '
          _Dbg_msg_nocr \
              "${label}highlight style "
          if [[ -z $_Dbg_set_highlight ]] ; then
              _Dbg_msg 'off.'
          else
_Dbg_msg "${_Dbg_set_highlight}"
          fi
          ;;
      his | hist | history )
          [[ -n $label ]] && label='set history   -- '
          _Dbg_msg_nocr \
              "${label}Set record command history is "
          if [[ -z $_Dbg_set_edit ]] ; then
              _Dbg_msg 'off.'
          else
              _Dbg_msg 'on.'
          fi
          ;;
      inferior-tty )
          [[ -n $label ]] && label='set inferior-tty -- '
          _Dbg_msg "${label} set tty for input and output"
          ;;
      lin | line | linet | linetr | linetra | linetrac | linetrace )
          [[ -n $label ]] && label='set linetrace -- '
          typeset onoff='off.'
          (( _Dbg_set_linetrace )) && onoff='on.'
          _Dbg_msg \
              "${label}Set tracing execution of lines before executed is" $onoff
          if (( _Dbg_set_linetrace )) ; then
              _Dbg_msg \
                  "set linetrace delay -- delay before executing a line is" $_Dbg_linetrace_delay
          fi
          return 0
          ;;
      lis | list | lists | listsi | listsiz | listsize )
          [[ -n $label ]] && label='set list size -- '
          _Dbg_msg "${label}Set number of lines in listings is ${_Dbg_set_listsize}"
   ;;
      p | pr | pro | prom | promp | prompt )
          [[ -n $label ]] && label='set prompt    -- '
          _Dbg_msg "${label}prompt string ${_Dbg_set_prompt}"
          ;;
      sho|show|showc|showco|showcom|showcomm|showcomma|showcomman|showcommand )
          [[ -n $label ]] && label='set showcommand -- '
          _Dbg_msg \
              "${label}command tracing is $_Dbg_set_show_command"
          ;;
      sty | style )
          [[ -n $label ]] && label='set style    -- '
          _Dbg_msg_nocr \
              "${label}Set pygments highlighting style is "
          if [[ -z $_Dbg_set_style ]] ; then
              _Dbg_msg 'off.'
          else
_Dbg_msg "${_Dbg_set_style}"
          fi
          ;;
      wi|wid|widt|width )
          [[ -n $label ]] && label='set width    -- '
          _Dbg_msg "${label}Set line width is ${_Dbg_set_linewidth}"
          ;;
      * )
          _Dbg_msg \
              "There is no \"set $subcmd\" command."
  esac
